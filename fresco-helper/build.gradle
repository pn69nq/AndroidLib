if(frescoIsLib.toBoolean()){
    apply plugin: 'com.android.library'
}
else{
    apply plugin: 'com.android.application'
}

def cfg = rootProject.ext
def androidDependencies = cfg.androidDependencies
def fresco = cfg.fresco

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        if(frescoIsLib.toBoolean()){

        }
        else{
            applicationId "com.facebook.fresco.helper"
        }
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    sourceSets {
        main {
            if (frescoIsLib.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'

            } else {
                manifest.srcFile 'src/simple/AndroidManifest.xml'
                java.srcDirs 'src/simple/java'
                res.srcDir 'src/simple/res'
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api fresco.frescoCore
    api fresco.frescoGif
    api fresco.frescoWebpsupport
    api fresco.frescoanimatedWebp
    api 'com.davemorrissey.labs:subsampling-scale-image-view:3.10.0'

    if(!frescoIsLib.toBoolean()){
        implementation 'com.squareup.okhttp3:okhttp:3.10.0'
        implementation 'com.squareup.okhttp3:logging-interceptor:3.9.0'
        implementation androidDependencies.support_v7
        implementation androidDependencies.recyclerView
    }
    else{
    }
    implementation androidDependencies.support_v4
    implementation androidDependencies.cardview_v7
}